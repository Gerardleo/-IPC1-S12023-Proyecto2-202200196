/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Paneles;

import Modelos.Categoria;
import Modelos.CategoriaListaDoble;
import java.awt.BorderLayout;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Gerardo
 */
public class Biblioteca extends javax.swing.JPanel {

    /**
     * Creates new form Biblioteca
     */
    public Biblioteca() {
        initComponents();
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBase = new javax.swing.JPanel();
        imagenes = new javax.swing.JComboBox<>();
        imagen = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        addImage = new javax.swing.JButton();
        deleteImage = new javax.swing.JButton();
        usuario_log = new javax.swing.JLabel();
        addCategory = new javax.swing.JButton();
        deleteCategory = new javax.swing.JButton();
        siguienteFoto = new javax.swing.JButton();
        anteriorFoto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        categoriaTxt = new javax.swing.JList();

        panelBase.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setText("Categorias");

        addImage.setText("Agregar Imagen");
        addImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addImageActionPerformed(evt);
            }
        });

        deleteImage.setText("Eliminar Imagen");
        deleteImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteImageActionPerformed(evt);
            }
        });

        usuario_log.setText("Usario1");

        addCategory.setText("Agregar Categria");
        addCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCategoryActionPerformed(evt);
            }
        });

        deleteCategory.setText("Eliminar Categoria");
        deleteCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCategoryActionPerformed(evt);
            }
        });

        siguienteFoto.setText(">");
        siguienteFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteFotoActionPerformed(evt);
            }
        });

        anteriorFoto.setText("<");
        anteriorFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorFotoActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(categoriaTxt);

        javax.swing.GroupLayout panelBaseLayout = new javax.swing.GroupLayout(panelBase);
        panelBase.setLayout(panelBaseLayout);
        panelBaseLayout.setHorizontalGroup(
            panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBaseLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBaseLayout.createSequentialGroup()
                        .addGroup(panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBaseLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel1))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBaseLayout.createSequentialGroup()
                                .addGap(193, 193, 193)
                                .addComponent(addImage)
                                .addGap(18, 18, 18)
                                .addComponent(deleteImage)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(usuario_log, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelBaseLayout.createSequentialGroup()
                                .addComponent(anteriorFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addGroup(panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(imagenes, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelBaseLayout.createSequentialGroup()
                                        .addComponent(imagen, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(siguienteFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(91, 91, 91))
                    .addGroup(panelBaseLayout.createSequentialGroup()
                        .addComponent(addCategory)
                        .addGap(26, 26, 26)
                        .addComponent(deleteCategory)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        panelBaseLayout.setVerticalGroup(
            panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBaseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBaseLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addImage)
                            .addComponent(deleteImage)))
                    .addGroup(panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1)
                        .addComponent(usuario_log, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBaseLayout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(siguienteFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBaseLayout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(anteriorFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBaseLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(imagenes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(imagen, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBaseLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37)
                .addGroup(panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCategory)
                    .addComponent(deleteCategory))
                .addContainerGap(104, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panelBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    public String nombre_usuario;
    CategoriaListaDoble catL = new CategoriaListaDoble();
    
    
    private void deleteImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteImageActionPerformed
        System.out.println(nombre_usuario);
        catL.mostrarNormal();
        
    
    
    }//GEN-LAST:event_deleteImageActionPerformed

    private void addCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCategoryActionPerformed
         String category_nombre;
        /* Contruimos el cuandro de diálogo*/
        category_nombre=JOptionPane.showInputDialog("Introduce la categoria a crear");
        System.out.println(category_nombre);
            if(category_nombre == null){
              JOptionPane.showMessageDialog(null, "Ha cancelado la entrada de datos.");
            }else{
             if(category_nombre.equals("")){
            JOptionPane.showConfirmDialog(this, "Debe de Agregar el nombre" , "Confirmar acción", JOptionPane.DEFAULT_OPTION);
                }else{
                DefaultListModel<String> modelo = new DefaultListModel<>();
                listaCategorias.add(new Categoria(nombre_usuario, category_nombre));
                String cadena = "";
                for(Categoria C: listaCategorias){ 
                   if(C.getUsuario().equals(nombre_usuario)){
                       modelo.addElement(C.getNombre());
                   }
                }
                categoriaTxt.setModel(modelo);
                 
                 
            
                }
            }       
    }//GEN-LAST:event_addCategoryActionPerformed

    private void addImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addImageActionPerformed
        JFileChooser escoger =  new JFileChooser();
        FileNameExtensionFilter  filtro = new FileNameExtensionFilter("Imagenes", "jpg", "png", "gif");
        escoger.setFileFilter(filtro);
        try{
            String categoria = categoriaTxt.getSelectedValue().toString();
        int confirmacion = escoger.showDialog(this,"Aceptar");
        if(confirmacion == JFileChooser.APPROVE_OPTION){
            File archivo = escoger.getSelectedFile();
            ImageIcon icon = new ImageIcon(archivo.getAbsolutePath());
            icon.setImage(icon.getImage().getScaledInstance(imagen.getWidth(), imagen.getHeight(), Image.SCALE_SMOOTH));
            imagen.setIcon(icon);
            imagenes.addItem(archivo.getName());
            catL.agregar(nombre_usuario, categoria, archivo.getAbsolutePath());
            catL.mostrarNormal();
        }else{
         JOptionPane.showConfirmDialog(this, "Cancelo la agregacion" , "Confirmar acción", JOptionPane.DEFAULT_OPTION);

        }
        }catch(Exception e){
           JOptionPane.showConfirmDialog(this, "No ha seleccionado una categoria" , "Confirmar acción", JOptionPane.DEFAULT_OPTION);
        }
        
    }//GEN-LAST:event_addImageActionPerformed
    private void siguienteFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteFotoActionPerformed
        try {
            Categoria foto_actual =  catL.getInicio();
            foto_actual = foto_actual.getSiguiente();
            String rutaSiguiente = foto_actual.getRuta();
            ImageIcon icon = new ImageIcon(rutaSiguiente);
            icon.setImage(icon.getImage().getScaledInstance(imagen.getWidth(), imagen.getHeight(), Image.SCALE_SMOOTH));
            imagen.setIcon(icon);
            imagenes.setSelectedItem(foto_actual.getNombre());
        } catch (Exception ex) {
           JOptionPane.showConfirmDialog(this, "No hay foto Siguiente" , "Confirmar acción", JOptionPane.DEFAULT_OPTION);
        }
    
    }//GEN-LAST:event_siguienteFotoActionPerformed
        
  
    
    private void anteriorFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorFotoActionPerformed
        try {
            Categoria foto_actual =  catL.getFin();
            foto_actual = foto_actual.getAnterior();
            String rutaAnterior = foto_actual.getRuta();
            ImageIcon icon = new ImageIcon(rutaAnterior);
        icon.setImage(icon.getImage().getScaledInstance(imagen.getWidth(), imagen.getHeight(), Image.SCALE_SMOOTH));
        imagen.setIcon(icon);
        imagenes.setSelectedItem(foto_actual.getNombre());
        } catch (Exception ex) {
           JOptionPane.showConfirmDialog(this, "No hay foto Anterior" , "Confirmar acción", JOptionPane.DEFAULT_OPTION);
        }
    }//GEN-LAST:event_anteriorFotoActionPerformed

    private void deleteCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCategoryActionPerformed
       String category_nombre ;
         
        try{
         category_nombre= categoriaTxt.getSelectedValue().toString();
        System.out.println(category_nombre);
            if(category_nombre == null){
              JOptionPane.showMessageDialog(null, "Ha cancelado la eliminacion de datos.");
            }else{
                if(category_nombre.equals("")){
                    JOptionPane.showConfirmDialog(this, "Debe de Agregar el nombre" , "Confirmar acción", JOptionPane.DEFAULT_OPTION);
                        }else{
                            try{
                                DefaultListModel<String> modelo = new DefaultListModel<>();
                                int eliminarCategoria =posicionCategoria(category_nombre);
                                listaCategorias.remove(eliminarCategoria);
                                for(Categoria C: listaCategorias){    
                                   modelo.addElement( C.getNombre());
                                }
                                categoriaTxt.setModel(modelo);
                            }catch(Exception ex){
                                  JOptionPane.showConfirmDialog(this, "No se encontro la categoria" , "Confirmar acción", JOptionPane.DEFAULT_OPTION);
                            }
                        
                        }
            }
        }catch(Exception ex){
           JOptionPane.showConfirmDialog(this, "No ha seleccionado una categoria" , "Confirmar acción", JOptionPane.DEFAULT_OPTION);

                    }
        
    }//GEN-LAST:event_deleteCategoryActionPerformed

 
     public void mostrarDato(String nombre) {
        nombre_usuario = nombre;
        usuario_log.setText(nombre);
    }
     
    ArrayList<Categoria> listaCategorias  = new ArrayList<Categoria>();
    
    public ArrayList<Categoria> getListaCategorias() {
        return listaCategorias;
    }
    
    public int posicionCategoria(String nombre){
        for(int i = 0; i< getListaCategorias().size(); i++){
        Categoria c =  getListaCategorias().get(i);
            if(nombre.equals(c.getNombre())){
                return i;
            }
        }
       return -1;
    }
    
    public void listaFotos(CategoriaListaDoble lista){
        this.catL = lista;
    }
    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCategory;
    private javax.swing.JButton addImage;
    private javax.swing.JButton anteriorFoto;
    private javax.swing.JList categoriaTxt;
    private javax.swing.JButton deleteCategory;
    private javax.swing.JButton deleteImage;
    private javax.swing.JLabel imagen;
    private javax.swing.JComboBox<String> imagenes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelBase;
    private javax.swing.JButton siguienteFoto;
    private javax.swing.JLabel usuario_log;
    // End of variables declaration//GEN-END:variables
}
